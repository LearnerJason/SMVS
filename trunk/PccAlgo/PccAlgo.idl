import "oaidl.idl";
import "ocidl.idl";

//#define PccAlgo_Msi 1
[
	object,
	uuid(2855E408-C382-48B6-A5CA-D55FE0B50362),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IPccAlgo : IDispatch
{
	[id(1),local] HRESULT SetCurrentImage([in] LONG* pImg);
	[id(2),local] HRESULT GetRegion([in] BYTE rgnID, [in,out] LONG* pRgn);
	[id(3),local] HRESULT GetErrorRegion([in] BYTE rgnID, [in,out] LONG* pErrorRgn);
	[id(4),local] HRESULT GetInternalStats([in] BYTE rgnID, [in] LONG nMaxLen, [out, size_is(nMaxLen)] FLOAT* pStatsArray, [in, out] LONG* nActualLen);		
	[id(5),local] HRESULT ReloadExternalFile([in] BSTR* bstrPath);

	[id(6), local]  HRESULT CenterLocationAlgo([in] VARIANT* rgnID, [in] VARIANT* pRadius, [in] VARIANT* pMinScore);
	[id(7), local]  HRESULT CenterLocationAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(8), local]  HRESULT CenterLocationAlgo1([in] VARIANT* rgnID, [in] VARIANT* pRadius, [in] VARIANT* pMinScore);
	[id(9), local]  HRESULT CenterLocationAlgo1Help([out,retval] BSTR* pHelpStr);
	[id(10), local] HRESULT CenterLocationUseEdgesAlgo([in] VARIANT* rgnID, [in] VARIANT* pRadius, [in] VARIANT* pThresholdLow, [in] VARIANT* pThresholdHigh, [in] VARIANT* pMinCircularity);
	[id(11), local] HRESULT CenterLocationUseEdgesAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(12), local] HRESULT CenterLocationUseEdgesAlgo1([in] VARIANT* rgnID, [in] VARIANT* pRadius, [in] VARIANT* pThresholdLow, [in] VARIANT* pThresholdHigh);
	[id(13), local] HRESULT CenterLocationUseEdgesAlgo1Help([out,retval] BSTR* pHelpStr);
	[id(14), local] HRESULT MatchingParaAlgo([in] VARIANT* rgnId, [in]  VARIANT* pGreediness, [in] VARIANT*pRingOrOCR,[in] BSTR* bstrShm1File, [in] BSTR* bstrShm2File,[out,retval] VARIANT* pMatchingResult);
	[id(15), local] HRESULT MatchingParaAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(16), local] HRESULT MatchingParaMinScoreAlgo([in] VARIANT* rgnId, [in]  VARIANT* pMinScore, [in]  VARIANT* pNumLevels, [in]  VARIANT* pGreediness, [in] VARIANT*pRingOrOCR,[in] BSTR* bstrShm1File, [in] BSTR* bstrShm2File,[out,retval] VARIANT* pMatchingResult);
	[id(17), local] HRESULT MatchingParaMinScoreAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(18), local] HRESULT CircleRegionLocationAlgo([in] VARIANT* rgnId, [in] VARIANT* pRadius, [in] VARIANT* pRoiWidth);
	[id(19), local] HRESULT CircleRegionLocationAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(20), local] HRESULT DetectRegionLocationAlgo([in] VARIANT* rgnId,[in] VARIANT* pErosionSize,[in] VARIANT* pRingOrOCR, [in]BSTR* bstrRgnFile,[in] BSTR* bstrExtractRgnFile);
	[id(21), local] HRESULT DetectRegionLocationAlgoHelp([out,retval] BSTR* pHelpStr);
	//	
	[id(24), local] HRESULT CurlOptimizeAlgo([in] VARIANT* rgnId, [in] VARIANT* pFreq_start, [in] VARIANT* pFreq_cutoff,[in] VARIANT* pDefectType, [in] VARIANT* pWaveThreshold, [in] VARIANT* pMinArea, [out,retval] VARIANT* pDetectNumber);
	[id(25), local] HRESULT CurlOptimizeAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(26), local] HRESULT UVCurlAlgo([in] VARIANT* rgnId, [in] VARIANT* pNumPart, [in] VARIANT* pThresholdValue, [in] VARIANT* pGrayValue,[in]VARIANT* pMeanGrayValue, [out,retval] VARIANT* pDetectArea);
	[id(27), local] HRESULT UVCurlAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(28), local] HRESULT AnnularRotaDynThresholdAlgo([in] VARIANT* rgnId, [in]VARIANT* pRotaAngle,[in] VARIANT* pDynThresh, [in] VARIANT* pDefectSize, [out,retval] VARIANT* pDetectArea);
	[id(29), local] HRESULT AnnularRotaDynThresholdAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(30), local] HRESULT CurlNoCompoundAlgo([in]VARIANT* rgnId,[out,retval]VARIANT*pGrayValueMean );
    [id(31), local] HRESULT CurlNoCompoundAlgoHelp ([out,retval]BSTR* pHelpStr);
	[id(32), local] HRESULT DynThresholdAlgo([in] VARIANT* rgnId, [in] VARIANT* pBlackMaskSize, [in] VARIANT* pSeriousBlackPointDynThresh, [in] VARIANT* pSeriousBlackPointSize, [in] VARIANT* pWhiteMaskSize, [in] VARIANT* pSeriousWhitePointDynThresh, [in] VARIANT* pSeriousWhitePointSize, [out,retval] VARIANT* pDetectArea);
	[id(33), local] HRESULT DynThresholdAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(34), local] HRESULT BubbleDetectProfileAlgo([in] VARIANT* rgnId, [in] VARIANT* pBlackMaskSize, [in] VARIANT* pSeriousBlackPointDynThresh, [in] VARIANT* pSeriousBlackPointSize, [in] VARIANT* pWhiteMaskSize, [in] VARIANT* pSeriousWhitePointDynThresh, [in] VARIANT* pSeriousWhitePointSize, [out,retval] VARIANT* pDetectArea);
	[id(35), local] HRESULT BubbleDetectProfileAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(36), local] HRESULT BlackDetectAlgo([in]VARIANT* rgnId,[in] VARIANT* pBlackMaskSize, [in]VARIANT* pSeriousBlackPointDynThresh,[in] VARIANT* pBlackThresh,[in]VARIANT* pSeriousBlackPointSize,[out,retval] VARIANT* pDetectArea);
	[id(37), local] HRESULT BlackDetectAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(38), local] HRESULT BlackDetectExcludeEdgesAlgo([in]VARIANT* rgnId,[in] VARIANT* pBlackMaskSize, [in]VARIANT* pSeriousBlackPointDynThresh,[in] VARIANT* pBlackThresh,[in]VARIANT* pSeriousBlackPointSize,[in]VARIANT* pThresholdLow,[in] VARIANT* pMinEdgeSize,[out,retval] VARIANT* pDetectArea);
	[id(39), local] HRESULT BlackDetectExcludeEdgesAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(40), local] HRESULT DerivateGaussDetectAlgo([in] VARIANT* rgnId, [in] VARIANT* pMaskSize,[in] VARIANT* pSmoothSize, [in] VARIANT* pDefectType, [in] VARIANT* pSeriousBlackPointDynThresh, [in] VARIANT* pSeriousBlackPointSize, [in] VARIANT* pSeriousWhitePointDynThresh, [in] VARIANT* pSeriousWhitePointSize, [out,retval] VARIANT* pDetectArea);
	[id(41), local] HRESULT DerivateGaussDetectAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(42), local] HRESULT EdgeAlgo([in] VARIANT* rgnId, [in] VARIANT* pEdgeThred, [in] VARIANT* pDefectSize, [out,retval] VARIANT* pDetectArea);
	[id(43), local] HRESULT EdgeAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(44), local] HRESULT LineDetectionAlgo([in] VARIANT* rgnId, [in] VARIANT* pMaskSize, [in] VARIANT* pThredLow, [in] VARIANT* pThredUpper, [in] VARIANT* pDefectType, [in] VARIANT* pDefectSize, [out,retval]VARIANT* pDefectArea);
	[id(45), local] HRESULT LineDetectionAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(46), local] HRESULT LineDetectionExclude90Algo([in] VARIANT* rgnId, [in] VARIANT* pMaskSize, [in] VARIANT* pThredLow, [in] VARIANT* pThredUpper, [in] VARIANT* pDefectType, [in] VARIANT* pDefectSize, [out,retval]VARIANT* pDefectArea);
	[id(47), local] HRESULT LineDetectionExclude90AlgoHelp([out,retval] BSTR* pHelpStr);

	[id(54), local] HRESULT TabDetectProfileAlgo ([in] VARIANT* rgnId, [in]  VARIANT* pThredBackground, [in]  VARIANT* pThredForeground,[in] VARIANT* pAnglePointSize,[in] VARIANT* pMinAngle,[in]  VARIANT* pSeriousBlackPointSize,  [out,retval]VARIANT* pDetectArea);
	[id(55), local] HRESULT TabDetectProfileAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(56), local] HRESULT BlackDetectUseUpSizeAlgo([in]VARIANT* rgnId, [in]VARIANT* pBlackThresh, [in]VARIANT* pThredForeground, [in]VARIANT* pWhiteSize,[in]VARIANT* pSeriousBlackPointSize,[in]VARIANT* pBlackPointUpSize,[out,retval] VARIANT* pDetectArea);
	[id(57), local] HRESULT BlackDetectUseUpSizeAlgoHelp( [out,retval]BSTR* pHelpStr);
	[id(58), local] HRESULT DeformationDetectAlgo([in]VARIANT* rgnId,[in] VARIANT* pAlgoSelect,[in] VARIANT* pSmoothSize, [out,retval] VARIANT* pDetectDist);
	[id(59), local] HRESULT DeformationDetectAlgoHelp([out,retval] BSTR* pHelpStr);
	[id(60),local] HRESULT CircleRegionLocationAlgo1([in] VARIANT* rgnId,[in]VARIANT* pMoveSize, [in] VARIANT* pRadius, [in] VARIANT* pRoiWidth);
	[id(61),local] HRESULT CircleRegionLocationAlgo1Help([out,retval] BSTR* pHelpStr);
	[id(62), local] HRESULT BubbleDetectProfileAlgo1([in] VARIANT* rgnId, [in] VARIANT* pBlackMaskSize, [in] VARIANT* pSeriousBlackPointDynThresh, [in] VARIANT* pSeriousBlackPointSize, [in] VARIANT* pWhiteMaskSize, [in] VARIANT* pSeriousWhitePointDynThresh, [in] VARIANT* pSeriousWhitePointSize, [out,retval] VARIANT* pDetectArea);
	[id(63), local] HRESULT BubbleDetectProfileAlgo1Help([out,retval] BSTR* pHelpStr);
	[id(64), local] HRESULT AnnularRotaDynThresholdAlgoBW([in] VARIANT* rgnId, [in] VARIANT* pRotaAngle, [in] VARIANT* pBlackThredLow, [in]VARIANT* pBlackDefectSize, [in] VARIANT* pWhiteThredLow, [in] VARIANT* pWhiteDefectSize, [out,retval]VARIANT* pDetectArea);
	[id(65), local] HRESULT AnnularRotaDynThresholdAlgoBWHelp([out,retval] BSTR* pHelpStr);

	[id(100), local] HRESULT SetCurrentTaskName([in] BSTR* bstrTaskName);
	[id(101), local] HRESULT SetSelfLearningParam([in] DWORD sampleSz, [in] BSTR* bstrParam);
	[id(102), local] HRESULT SelectModelImage([in] LONG* pCrtImg, [in] BYTE productID);
	[id(103), local] HRESULT DeleteModelImage([in] BYTE nIndex, [in] BYTE productID);
	[id(104), local] HRESULT SaveResult([in] BSTR* strModelName, [in] BYTE productID);
	[id(105), local] HRESULT AddModelImage([in] LONG* pImg, [in] BSTR* strFolder, [in] BYTE productID);
	[id(106), local] HRESULT GetSelfLearningResult([in,out] LONG*  multiModelImag, [in, out] long* cMax, [in,out] float* vImgScore, [in] BYTE productID);
	[id(107), local] HRESULT ResetSelfLearningRegion([in] BSTR* strRegionExtractPara);
	[id(108), local] HRESULT GetSelfLearningRegion([in,out] LONG* pRgn);
	[id(109), local] HRESULT ResetSelfLearningProcedure(void);
	[id(110), local] HRESULT SetSelfLearningTargetTaskName([in] BSTR* bstrTaskName);

	///µ¥½Ó¿Ú
#ifdef PccAlgo_Msi
	[id(111), local] HRESULT MsiUpperSurfaceRegionExtractAlgo([in]VARIANT* rgnID ,[in]VARIANT* pRowStart,[in]VARIANT* pColStart,[in]VARIANT* pRegWidth,[in]VARIANT* pRegHeight,[in]VARIANT* pThredLow,[in]VARIANT* pThredUpper);
    [id(112), local] HRESULT MsiUpperSurfaceRegionExtractAlgoHelp([out,retval]BSTR* pHelpStr);

	[id(113), local] HRESULT MsiVoidCenterLocationAlgo([in]VARIANT* rgnId);
    [id(114), local] HRESULT MsiVoidCenterLocationAlgoHelp([out,retval]BSTR* pHelpStr);

	[id(115), local]HRESULT MsiGapDetectAlgo([in]VARIANT* rgnId, [in]VARIANT* pSwitch, [in]VARIANT* pVerticalOrLevel,[in]VARIANT* pMeanMaskSize,[in]VARIANT* pSigma, [in]VARIANT* pLower, [in]VARIANT* pUpper,[in]VARIANT* pLengthSize,[out,retval]VARIANT* pLengthDiff);
	[id(116), local]HRESULT MsiGapDetectAlgoHelp([out,retval]BSTR* pHelpStr);

	[id(117), local] HRESULT MsiAnnularRotaDynThresholdAlgo([in] VARIANT* rgnId,[in]VARIANT* pRotaAngle,[in] VARIANT* pDynThresh, [in] VARIANT* pDefectSize, [out,retval] VARIANT* pDetectArea);
	[id(118), local] HRESULT MsiAnnularRotaDynThresholdAlgoHelp([out,retval] BSTR* pHelpStr);

	[id(119),local] HRESULT MsiCircleRegionLocationAlgo([in] VARIANT* rgnId, [in] VARIANT* pRadius, [in] VARIANT* pRoiWidth, [in]VARIANT* pSigma,[in]VARIANT* pLower, [in]VARIANT* pUpper, [in]VARIANT* pAngleDiff);
	[id(120),local] HRESULT MsiCircleRegionLocationAlgoHelp([out,retval] BSTR* pHelpStr);

	[id(121),local] HRESULT MsiDetectRegionLocationAlgo([in] VARIANT* rgnId,[in] VARIANT* pErosionSize,[in] VARIANT* pRingOrOCR, [in]BSTR* bstrRgnFile,[in] BSTR* bstrExtractRgnFile,[in]VARIANT* pSigma,[in]VARIANT* pLower, [in]VARIANT* pUpper, [in]VARIANT* pAngle, [in]VARIANT* pCurv);
	[id(122),local] HRESULT MsiDetectRegionLocationAlgoHelp([out,retval] BSTR* pHelpStr);

	[id(123), local] HRESULT MsiEndSidesRegionLocationAlgo([in]VARIANT* rgnID ,[in]VARIANT* pRgnSize,[in]VARIANT* pErosionSize,[in]VARIANT* pRowDist);
    [id(124), local] HRESULT MsiEndSidesRegionLocationAlgoHelp([out,retval]BSTR* pHelpStr);

	[id(125), local] HRESULT MsiBottomSidesRegionLocationAlgo([in]VARIANT* rgnID ,[in]VARIANT* pHp,[in]VARIANT* pVp,[in]VARIANT* pWidth,[in]VARIANT* pHeight,[in]VARIANT* pMovedSize,[in]VARIANT* pErosionSize);
    [id(126), local] HRESULT MsiBottomSidesRegionLocationAlgoHelp([out,retval]BSTR* pHelpStr);
	//

	[id(127), local] HRESULT MsiUpperSurfaceCenterRegionLocationAlgo([in]VARIANT* rgnId,[in]VARIANT* pErosionSize,[in]VARIANT* pVClipSize,[in]VARIANT* pLClipSize,[in]VARIANT*pMoveUpSize,[in]VARIANT*pMoveLowSize);
    [id(128), local] HRESULT MsiUpperSurfaceCenterRegionLocationAlgoHelp([out,retval]BSTR* pHelpStr);

	[id(129), local] HRESULT MsiUpperSurfaceTopRegionLocationAlgo([in]VARIANT* rgnId,[in]VARIANT* pErosionSize,[in]VARIANT* pVClipSize,[in]VARIANT* pLClipSize,[in]VARIANT*pMoveSize);
    [id(130), local] HRESULT MsiUpperSurfaceTopRegionLocationAlgoHelp([out,retval]BSTR* pHelpStr);

	[id(131), local] HRESULT MsiUpperSurfaceBottomRegionLocationAlgo([in]VARIANT* rgnId,[in]VARIANT* pOpeningSize,[in]VARIANT* pVClipSize,[in]VARIANT* pLClipSize,[in]VARIANT*pMoveSize,[in]VARIANT* pErosionSize);
    [id(132), local] HRESULT MsiUpperSurfaceBottomRegionLocationAlgoHelp([out,retval]BSTR* pHelpStr);

	[id(133), local] HRESULT MsiUpperSurfaceSidesRegionLocationAlgo([in]VARIANT* rgnId,[in]VARIANT* pErosionSize,[in]VARIANT* pLClipSize);
    [id(134), local] HRESULT MsiUpperSurfaceSidesRegionLocationAlgoHelp([out,retval]BSTR* pHelpStr);

	[id(135), local] HRESULT MsiWhiteReinforcedRegionLocationAlgo([in]VARIANT* rgnId,[in]VARIANT* pRegHeight,[in]VARIANT* pRegWidth,[in]VARIANT* pThreshValue,[in]VARIANT* pErosionSizeWidth,[in]VARIANT* pErosionSizeHeight);
    [id(136), local] HRESULT MsiWhiteReinforcedRegionLocationAlgoHelp([out,retval]BSTR* pHelpStr);

	[id(137), local] HRESULT MsiBlackReinforcedRegionLocationAlgo([in]VARIANT* rgnId,[in]VARIANT* pRegHeight,[in]VARIANT* pRegWidth,[in]VARIANT* pThreshValue,[in]VARIANT* pErosionSizeWidth,[in]VARIANT* pErosionSizeHeight);
    [id(138), local] HRESULT MsiBlackReinforcedRegionLocationAlgoHelp([out,retval]BSTR* pHelpStr);

	[id(139), local] HRESULT MsiWhiteReinforcedBlackDetectAlgo([in]VARIANT* rgnId, [in]VARIANT* pMoveSize, [in]VARIANT* pSeriousBlackPointDynThresh,[in]VARIANT* pSeriousBlackPointSize,[out,retval]VARIANT* pDetectArea);
	[id(140), local] HRESULT MsiWhiteReinforcedBlackDetectAlgoHelp([out,retval] BSTR* pHelpStr);

	[id(141), local] HRESULT MsiBlackReinforcedBlackDetectAlgo([in]VARIANT* rgnId, [in]VARIANT* pMoveSize, [in]VARIANT* pSeriousBlackPointDynThresh,[in]VARIANT* pSeriousBlackPointSize,[out,retval]VARIANT* pDetectArea);
	[id(142), local] HRESULT MsiBlackReinforcedBlackDetectAlgoHelp([out,retval] BSTR* pHelpStr);

	[id(143), local] HRESULT MsiUpperSurfaceCenterRegionLocationAlgo1([in]VARIANT* rgnId,[in]VARIANT* pErosionSize,[in]VARIANT* pRegHeight,[in]VARIANT*pMoveUpSize,[in]VARIANT* pLClipSize);
    [id(144), local] HRESULT MsiUpperSurfaceCenterRegionLocationAlgo1Help([out,retval]BSTR* pHelpStr);

	[id(145), local] HRESULT MsiUpperSurfaceBottomRegionLocationAlgo1([in]VARIANT* rgnId,[in]VARIANT* pErosionSize,[in]VARIANT*pMoveUpSize,[in]VARIANT* pMoveLowSize);
    [id(146), local] HRESULT MsiUpperSurfaceBottomRegionLocationAlgo1Help([out,retval]BSTR* pHelpStr);

	[id(147), local] HRESULT CenterLocationAlgoHS( [in]VARIANT* rgnId, [in] VARIANT* pThresholdLow, [in]VARIANT* pAreaMax);
	[id(148), local] HRESULT CenterLocationAlgoHSHelp([out,retval]BSTR* pHelpStr);

	[id(149),local]  HRESULT DetectRegionLocationExtractOCRAlgo([in]VARIANT* rgnId,[in]VARIANT* pRadius,[in]VARIANT* pErosionSize, [in]BSTR* bstrOcrRgnFile);
	[id(150),local]  HRESULT DetectRegionLocationExtractOCRAlgoHelp([out,retval] BSTR* pHelpStr);

	[id(151), local] HRESULT MsiStarvingDetectAlgo([in]VARIANT* rgnId, [out,retval]VARIANT* pDetectArea);
	[id(152), local] HRESULT MsiStarvingDetectAlgoHelp([out,retval] BSTR* pHelpStr);

	[id(153), local] HRESULT MsiBorderExtraSilkDetectAlgo([in]VARIANT* rgnId,  [in]VARIANT* pMoveSize,[in]VARIANT* pClosingSize,[in]VARIANT* pAreaSize,[out,retval]VARIANT* pDetectArea);
	[id(154), local] HRESULT MsiBorderExtraSilkDetectAlgoHelp([out,retval] BSTR* pHelpStr);

	[id(155), local] HRESULT MsiBorderExtraSilkDetectAlgo1([in]VARIANT* rgnId,  [in]VARIANT* pMoveSize,[in]VARIANT* pLowThred,[in]VARIANT* pLengthThred,[in]VARIANT* pClipNum,[in]VARIANT* pSizeThred,[out,retval]VARIANT* pDetectArea);
	[id(156), local] HRESULT MsiBorderExtraSilkDetectAlgo1Help([out,retval] BSTR* pHelpStr);

	[id(157), local] HRESULT MsiEndSidesRegionLocationAlgo1([in]VARIANT* rgnID ,[in]VARIANT* pOuterSize,[in]VARIANT* pInnerSize,[in]VARIANT* pUpSize,[in]VARIANT* pDownSize);
    [id(158), local] HRESULT MsiEndSidesRegionLocationAlgo1Help([out,retval]BSTR* pHelpStr);

	[id(159), local] HRESULT MsiBorderRubberLessDetectAlgo([in]VARIANT* rgnId,  [in]VARIANT* pErosionSize,[in]VARIANT* pAreaSize,[out,retval]VARIANT* pDetectArea);
	[id(160), local] HRESULT MsiBorderRubberLessDetectAlgoHelp([out,retval] BSTR* pHelpStr);

	[id(161), local] HRESULT MsiTopWholeRegionLocationAlgo([in]VARIANT* rgnID ,[in]VARIANT* pThreshold,[in]VARIANT* pOpnSize);
    [id(162), local] HRESULT MsiTopWholeRegionLocationAlgoHelp([out,retval]BSTR* pHelpStr);

	[id(163), local] HRESULT TopRubberLessDetectAlgo([in]VARIANT* rgnId, [in]VARIANT* pDiagonalDist,[out,retval]VARIANT* pDetectArea);
	[id(164), local] HRESULT TopRubberLessDetectAlgoHelp([out,retval] BSTR* pHelpStr);


#endif



};
// self-learning interface
[
	object,
	uuid(7EE73789-334E-45C6-8605-026755664282),
	nonextensible,
	pointer_default(unique)
]
interface ISelfLearning : IUnknown
{
	[id(1), local] HRESULT SetSelfLearningParam([in] DWORD sampleSz, [in] BSTR* bstrParam);
	[id(2), local] HRESULT SelectModelImage([in] LONG* pCrtImg, [in] BYTE productID);
	[id(3), local] HRESULT DeleteModelImage([in] BYTE nIndex, [in] BYTE productID);
	[id(4), local] HRESULT SaveResult([in] BSTR* strModelName, [in] BYTE productID);
	[id(5), local] HRESULT AddModelImage([in] LONG* pImg, [in] BSTR* strFolder, [in] BYTE productID);
	[id(6), local] HRESULT GetSelfLearningResult([in,out] LONG*  multiModelImag, [in, out] long* cMax, [in,out] float* vImgScore, [in] BYTE productID);
	[id(7), local] HRESULT ResetSelfLearningRegion([in] BSTR* strRegionExtractPara);
	[id(8), local] HRESULT GetSelfLearningRegion([in,out] LONG* pRgn);
	[id(9), local] HRESULT ResetSelfLearningProcedure(void);
	[id(10), local] HRESULT SetSelfLearningTargetTaskName([in] BSTR* bstrTaskName);
};

[
	uuid(8F17DEFB-4561-4FAC-977A-145B3A620BF5),
	version(1.0),
]
library PccAlgoLib
{
	importlib("stdole2.tlb");
	[
		uuid(B6526FAD-08FA-46AE-B3DB-CEBC3970D34B)		
	]
	coclass PccAlgo
	{
		[default] interface IPccAlgo;
		interface ISelfLearning;
	};
};

